name: Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      loglevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

jobs:
  Build:
    runs-on: ubuntu-latest
    # outputs:
    #   Version: ${{ steps.gitversion.outputs.buGetVersionV2 }}
    #   CommitsSinceVersionSource: ${{ steps.gitVersion.outputs.CommitsSinceVersionSource }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 #fetch-depth is needed for GitVersion

      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: vivid-cache-yarn-${{ hashFiles('**/package.json') }}

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build components
        run: yarn compile

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: |
            common
            components
          key: vivid-cache-build-${{ github.event.pull_request.head.sha }}
     
      - name: Upload coverage as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: 'coverage'
          path: 'coverage/coverage.txt'

      - name: Create an issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENVIRONMENT: Development
          RUNNUMBER: ${{ github.run_number }}
        with:
          filename: .github/deployment-approval.md
        

      # - name: Determine Version
      #   uses: gittools/actions/gitversion/execute@v0.9.7
      #   with:
      #     versionSpec: '5.x'

      # - name: Determine Version
      #   uses: gittools/actions/gitversion/execute@v0.9.7
      #   id: gitversion #step id used as reference for output values

      # - name: Display GitVersion outputs
      #   run: |
      #     echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
      #     echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
      #     echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

